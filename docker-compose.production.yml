version: '3'

services:
  database:
    image: mariadb
    restart: always
    container_name: database_challenge
    ports:
      - "3310:3306"
    env_file:
      - .env
    command: [
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
    ]
    volumes:
      - database:/var/lib/mysql
      - ./database/mariadb.cnf:/etc/mysql/mariadb.cnf
      - ./database/ddl/ddl.sql:/docker-entrypoint-initdb.d/999-ddl.sql
    networks:
      - app-network

  nodejs:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: nodejs
    container_name: nodeejs
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - app-network

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    depends_on:
      - nodejs            
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    networks:
      - app-network
    command: certonly --webroot --webroot-path=/var/www/html --email dreidemyromain@gmail.com --agree-tos --no-eff-email --force-renewal -d challenge.jean-tostivint.net  -d www.challenge.jean-tostivint.net

volumes:
  database:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/adminsys/challenge/public
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/adminsys/challenge/dhparam/
      o: bind

networks:
  app-network:
    driver: bridge
